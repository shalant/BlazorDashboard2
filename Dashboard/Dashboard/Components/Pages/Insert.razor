@page "/insert"
@rendermode InteractiveServer

@using Dashboard.Models
@using Dashboard.Data
@using Dashboard.Services
@inject DataContext dataContext
@inject EmployeeService employeeService
@inject ProductService productService
@inject AiUsageService aiUsageService

<MudContainer>
<h3>Live Data</h3>
@foreach(var emp in EmployeesList)
{
    <p>@emp.Name | @emp.Title</p>
}

@* @if(ProductList is not null)
{
    <MudText>@ProductList.FirstOrDefault().Name</MudText>
}
else
{
    <MudButton OnClick="GetProducts"></MudButton>
} *@

    @foreach(var prod in ProductList)
    {
        <p>@prod.Name | @prod.Price</p>
    }

        <MudGrid>
            <MudItem xs="12" sm="6">

<MudText>Product Info</MudText>
<EditForm Model="@product" OnValidSubmit="OnValidSubmit">
    
            <MudTextField Label="Name" @bind-Value="@product.Name" />
            <MudTextField Label="Price" @bind-Value="@product.Price" />
            <MudTextField Label="Year" @bind-Value="@product.Year" />
            <MudCheckBox @bind-Value="@product.Available" />

            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled">Insert</MudButton>
    
</EditForm>
            </MudItem>

        <MudItem xs="12" sm="6">
        <MudText>State AI Usage Info</MudText>
        <EditForm Model="@aiUsage" OnValidSubmit="OnValidSubmitAi">
                <MudItem>
                    <MudTextField Label="StateName" @bind-Value="@aiUsage.StateName" />
                    <MudTextField Label="Usage" @bind-Value="@aiUsage.Usage" />
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled">Insert</MudButton>
                </MudItem>

        </EditForm>
</MudItem>
        </MudGrid>

</MudContainer>

@code {
    Product product = new Product();
    AiUsage aiUsage = new AiUsage();
    private List<Product> ProductList = new List<Product>();
    private List<Employee> EmployeesList = new List<Employee>();
    private List<AiUsage> AiUsageList = new List<AiUsage>();

    protected override async Task OnInitializedAsync()
    {
        ProductList = await productService.GetAllProducts();
        EmployeesList = await employeeService.GetAllEmployees();
        AiUsageList = await aiUsageService.GetAllAiUsage();
    }

    private async Task OnValidSubmit()
    {
        dataContext.Products.Add(product);
        await dataContext.SaveChangesAsync();
    }
    
    private async Task OnValidSubmitAi()
    {
        dataContext.AiUsages.Add(aiUsage);
        await dataContext.SaveChangesAsync();
    }

    // private async Task<List<Product>> GetProducts()
    // {
    //     var tempProducts = await dataContext.Products.ToList();
    //     if(tempProducts != null)
    //     {
    //         ProductList = tempProducts;
    //     }
        
    // }
}




